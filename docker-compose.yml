version: '2.1'

services:
  python-consumer:
    image: python-consumer
    build: .
    ports:
      - 8080:8080
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
    ports: ['9200:9200']
    container_name: elasticsearch
    mem_limit: 1g
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
  kibana:
    image: docker.elastic.co/kibana/kibana:6.3.2
    container_name: kibana
    ports: ['5601:5601']
    depends_on: ['elasticsearch']
  # mongodb:
  #   image: mongo:latest
  #   container_name: "mongodb"
  #   environment:
  #     - MONGO_DATA_DIR=/data/db
  #     - MONGO_LOG_DIR=/dev/null
  #     - MONGODB_REPLICA_SET_MODE=primary
  #   ports:
  #     - 27017:27017
  #   command: mongod --smallfiles --logpath=/dev/null --replSet=mongo-azure
  root:
    image: root:latest
    environment: 
      PORT: 3000
      MONGODB_URI: mongodb://mongodb/icu-dev
      ELASTICSEARCH_IP: elasticsearch
    ports: ['3000:3000']
    command: node server
    depends_on: 
      # - mongodb
      - elasticsearch
  zookeeper:
    image: debezium/zookeeper
    container_name: zookeeper
    ports: ['2181:2181','2888:2888','3888:3888']
  kafka:
    image: debezium/kafka
    container_name: kafka
    ports: ['9092:9092']
    depends_on: 
      - zookeeper
    environment: 
      - ZOOKEEPER_CONNECT=zookeeper
  connect:
    image: debezium/connect
    container_name: connect
    ports: ['8083:8083']
    environment: 
      - CONFIG_STORAGE_TOPIC=my-connect-configs
      - OFFSET_STORAGE_TOPIC=my-connect-offsets
      - BOOTSTRAP_SERVERS=kafka:9092
    depends_on: 
      - kafka
      - zookeeper
      # - mongodb
    links:
      - kafka
      # - mongodb
  



